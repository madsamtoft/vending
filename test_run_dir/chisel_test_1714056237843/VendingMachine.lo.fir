FIRRTL version 1.1.0
circuit VendingMachine :
  module FSM :
    input clock : Clock
    input reset : UInt<1>
    input io_coin2 : UInt<1>
    input io_coin5 : UInt<1>
    input io_buy : UInt<1>
    input io_price : UInt<5>
    input io_sum : UInt<8>
    output io_newSum : UInt<8>
    output io_alarm : UInt<1>
    output io_releaseCan : UInt<1>
    output io_idleScreen : UInt<1>

    reg stateReg : UInt<3>, clock with :
      reset => (UInt<1>("h0"), stateReg) @[FSM.scala 30:25]
    node _T = asUInt(UInt<1>("h1")) @[FSM.scala 33:23]
    node _T_1 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_2 = eq(_T, _T_1) @[FSM.scala 33:23]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[FSM.scala 20:21]
    node _T_3 = eq(REG, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_4 = and(io_coin2, _T_3) @[FSM.scala 20:11]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[FSM.scala 20:21]
    node _T_5 = eq(REG_1, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_6 = and(io_coin5, _T_5) @[FSM.scala 20:11]
    reg REG_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_2) @[FSM.scala 20:21]
    node _T_7 = eq(REG_2, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_8 = and(io_buy, _T_7) @[FSM.scala 20:11]
    node _GEN_0 = mux(_T_8, UInt<1>("h0"), stateReg) @[FSM.scala 39:39 40:18 30:25]
    node _GEN_1 = mux(_T_6, UInt<1>("h0"), _GEN_0) @[FSM.scala 37:41 38:18]
    node _GEN_2 = mux(_T_4, UInt<1>("h0"), _GEN_1) @[FSM.scala 35:35 36:18]
    node _T_9 = asUInt(UInt<1>("h0")) @[FSM.scala 33:23]
    node _T_10 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_11 = eq(_T_9, _T_10) @[FSM.scala 33:23]
    reg REG_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_3) @[FSM.scala 20:21]
    node _T_12 = eq(REG_3, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_13 = and(io_coin2, _T_12) @[FSM.scala 20:11]
    reg REG_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_4) @[FSM.scala 20:21]
    node _T_14 = eq(REG_4, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_15 = and(io_coin5, _T_14) @[FSM.scala 20:11]
    reg REG_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_5) @[FSM.scala 20:21]
    node _T_16 = eq(REG_5, UInt<1>("h0")) @[FSM.scala 20:13]
    node _T_17 = and(io_buy, _T_16) @[FSM.scala 20:11]
    node _GEN_3 = mux(_T_17, UInt<3>("h4"), stateReg) @[FSM.scala 48:39 49:18 30:25]
    node _GEN_4 = mux(_T_15, UInt<2>("h3"), _GEN_3) @[FSM.scala 46:41 47:18]
    node _GEN_5 = mux(_T_13, UInt<2>("h2"), _GEN_4) @[FSM.scala 44:35 45:18]
    node _T_18 = asUInt(UInt<2>("h2")) @[FSM.scala 33:23]
    node _T_19 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_20 = eq(_T_18, _T_19) @[FSM.scala 33:23]
    node _T_21 = asUInt(UInt<2>("h3")) @[FSM.scala 33:23]
    node _T_22 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_23 = eq(_T_21, _T_22) @[FSM.scala 33:23]
    node _T_24 = asUInt(UInt<3>("h4")) @[FSM.scala 33:23]
    node _T_25 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_26 = eq(_T_24, _T_25) @[FSM.scala 33:23]
    node _T_27 = lt(io_sum, io_price) @[FSM.scala 60:19]
    node _GEN_6 = mux(_T_27, UInt<3>("h5"), UInt<3>("h6")) @[FSM.scala 59:16 60:31 61:18]
    node _T_28 = asUInt(UInt<3>("h6")) @[FSM.scala 33:23]
    node _T_29 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_30 = eq(_T_28, _T_29) @[FSM.scala 33:23]
    node _T_31 = eq(io_buy, UInt<1>("h0")) @[FSM.scala 66:12]
    node _GEN_7 = mux(_T_31, UInt<1>("h0"), UInt<3>("h6")) @[FSM.scala 65:16 66:21 67:18]
    node _T_32 = asUInt(UInt<3>("h5")) @[FSM.scala 33:23]
    node _T_33 = asUInt(stateReg) @[FSM.scala 33:23]
    node _T_34 = eq(_T_32, _T_33) @[FSM.scala 33:23]
    node _T_35 = eq(io_buy, UInt<1>("h0")) @[FSM.scala 72:12]
    node _GEN_8 = mux(_T_35, UInt<1>("h0"), UInt<3>("h5")) @[FSM.scala 71:16 72:21 73:18]
    node _GEN_9 = mux(_T_34, _GEN_8, stateReg) @[FSM.scala 33:23 30:25]
    node _GEN_10 = mux(_T_30, _GEN_7, _GEN_9) @[FSM.scala 33:23]
    node _GEN_11 = mux(_T_26, _GEN_6, _GEN_10) @[FSM.scala 33:23]
    node _GEN_12 = mux(_T_23, UInt<1>("h0"), _GEN_11) @[FSM.scala 33:23 56:16]
    node _GEN_13 = mux(_T_20, UInt<1>("h0"), _GEN_12) @[FSM.scala 33:23 53:16]
    node _GEN_14 = mux(_T_11, _GEN_5, _GEN_13) @[FSM.scala 33:23]
    node _GEN_15 = mux(_T_2, _GEN_2, _GEN_14) @[FSM.scala 33:23]
    node _T_36 = asUInt(UInt<1>("h1")) @[FSM.scala 82:21]
    node _T_37 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_38 = eq(_T_36, _T_37) @[FSM.scala 82:21]
    node _T_39 = asUInt(UInt<2>("h2")) @[FSM.scala 82:21]
    node _T_40 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_41 = eq(_T_39, _T_40) @[FSM.scala 82:21]
    node _T_42 = lt(io_sum, UInt<7>("h62")) @[FSM.scala 88:19]
    node _io_newSum_T = add(io_sum, UInt<2>("h2")) @[FSM.scala 89:29]
    node _io_newSum_T_1 = tail(_io_newSum_T, 1) @[FSM.scala 89:29]
    node _GEN_16 = mux(_T_42, _io_newSum_T_1, UInt<7>("h63")) @[FSM.scala 87:17 88:27 89:19]
    node _T_43 = asUInt(UInt<2>("h3")) @[FSM.scala 82:21]
    node _T_44 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_45 = eq(_T_43, _T_44) @[FSM.scala 82:21]
    node _T_46 = lt(io_sum, UInt<7>("h5f")) @[FSM.scala 94:19]
    node _io_newSum_T_2 = add(io_sum, UInt<3>("h5")) @[FSM.scala 95:29]
    node _io_newSum_T_3 = tail(_io_newSum_T_2, 1) @[FSM.scala 95:29]
    node _GEN_17 = mux(_T_46, _io_newSum_T_3, UInt<7>("h63")) @[FSM.scala 93:17 94:27 95:19]
    node _T_47 = asUInt(UInt<3>("h4")) @[FSM.scala 82:21]
    node _T_48 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_49 = eq(_T_47, _T_48) @[FSM.scala 82:21]
    node _T_50 = geq(io_sum, io_price) @[FSM.scala 101:19]
    node _io_newSum_T_4 = sub(io_sum, io_price) @[FSM.scala 102:29]
    node _io_newSum_T_5 = tail(_io_newSum_T_4, 1) @[FSM.scala 102:29]
    node _GEN_18 = mux(_T_50, _io_newSum_T_5, io_sum) @[FSM.scala 101:32 102:19 99:17]
    node _T_51 = asUInt(UInt<3>("h6")) @[FSM.scala 82:21]
    node _T_52 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_53 = eq(_T_51, _T_52) @[FSM.scala 82:21]
    node _T_54 = asUInt(UInt<3>("h5")) @[FSM.scala 82:21]
    node _T_55 = asUInt(stateReg) @[FSM.scala 82:21]
    node _T_56 = eq(_T_54, _T_55) @[FSM.scala 82:21]
    node _GEN_19 = mux(_T_56, UInt<1>("h1"), UInt<1>("h0")) @[FSM.scala 110:16 79:12 82:21]
    node _GEN_20 = mux(_T_53, UInt<1>("h1"), UInt<1>("h0")) @[FSM.scala 107:21 80:17 82:21]
    node _GEN_21 = mux(_T_53, UInt<1>("h0"), _GEN_19) @[FSM.scala 79:12 82:21]
    node _GEN_22 = mux(_T_49, _GEN_18, io_sum) @[FSM.scala 78:13 82:21]
    node _GEN_23 = mux(_T_49, UInt<1>("h0"), _GEN_20) @[FSM.scala 80:17 82:21]
    node _GEN_24 = mux(_T_49, UInt<1>("h0"), _GEN_21) @[FSM.scala 79:12 82:21]
    node _GEN_25 = mux(_T_45, _GEN_17, _GEN_22) @[FSM.scala 82:21]
    node _GEN_26 = mux(_T_45, UInt<1>("h0"), _GEN_23) @[FSM.scala 80:17 82:21]
    node _GEN_27 = mux(_T_45, UInt<1>("h0"), _GEN_24) @[FSM.scala 79:12 82:21]
    node _GEN_28 = mux(_T_41, _GEN_16, _GEN_25) @[FSM.scala 82:21]
    node _GEN_29 = mux(_T_41, UInt<1>("h0"), _GEN_26) @[FSM.scala 80:17 82:21]
    node _GEN_30 = mux(_T_41, UInt<1>("h0"), _GEN_27) @[FSM.scala 79:12 82:21]
    node _GEN_31 = mux(_T_38, UInt<1>("h1"), UInt<1>("h0")) @[FSM.scala 81:17 82:21 84:21]
    node _GEN_32 = mux(_T_38, io_sum, _GEN_28) @[FSM.scala 78:13 82:21]
    node _GEN_33 = mux(_T_38, UInt<1>("h0"), _GEN_29) @[FSM.scala 80:17 82:21]
    node _GEN_34 = mux(_T_38, UInt<1>("h0"), _GEN_30) @[FSM.scala 79:12 82:21]
    io_newSum <= _GEN_32
    io_alarm <= _GEN_34
    io_releaseCan <= _GEN_33
    io_idleScreen <= _GEN_31
    stateReg <= mux(reset, UInt<1>("h1"), _GEN_15) @[FSM.scala 30:{25,25}]
    REG <= io_coin2 @[FSM.scala 20:21]
    REG_1 <= io_coin5 @[FSM.scala 20:21]
    REG_2 <= io_buy @[FSM.scala 20:21]
    REG_3 <= io_coin2 @[FSM.scala 20:21]
    REG_4 <= io_coin5 @[FSM.scala 20:21]
    REG_5 <= io_buy @[FSM.scala 20:21]

  module BcdTable :
    input clock : Clock
    input reset : UInt<1>
    input io_address : UInt<8>
    output io_data : UInt<8>

    node _io_data_T = bits(io_address, 6, 0)
    node table_0 = UInt<8>("h0") @[BcdTable.scala 12:14 8:19]
    node _GEN_0 = validif(eq(UInt<1>("h0"), _io_data_T), table_0) @[BcdTable.scala 15:{11,11}]
    node table_1 = UInt<8>("h1") @[BcdTable.scala 12:14 8:19]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _io_data_T), table_1, _GEN_0) @[BcdTable.scala 15:{11,11}]
    node table_2 = UInt<8>("h2") @[BcdTable.scala 12:14 8:19]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _io_data_T), table_2, _GEN_1) @[BcdTable.scala 15:{11,11}]
    node table_3 = UInt<8>("h3") @[BcdTable.scala 12:14 8:19]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _io_data_T), table_3, _GEN_2) @[BcdTable.scala 15:{11,11}]
    node table_4 = UInt<8>("h4") @[BcdTable.scala 12:14 8:19]
    node _GEN_4 = mux(eq(UInt<3>("h4"), _io_data_T), table_4, _GEN_3) @[BcdTable.scala 15:{11,11}]
    node table_5 = UInt<8>("h5") @[BcdTable.scala 12:14 8:19]
    node _GEN_5 = mux(eq(UInt<3>("h5"), _io_data_T), table_5, _GEN_4) @[BcdTable.scala 15:{11,11}]
    node table_6 = UInt<8>("h6") @[BcdTable.scala 12:14 8:19]
    node _GEN_6 = mux(eq(UInt<3>("h6"), _io_data_T), table_6, _GEN_5) @[BcdTable.scala 15:{11,11}]
    node table_7 = UInt<8>("h7") @[BcdTable.scala 12:14 8:19]
    node _GEN_7 = mux(eq(UInt<3>("h7"), _io_data_T), table_7, _GEN_6) @[BcdTable.scala 15:{11,11}]
    node table_8 = UInt<8>("h8") @[BcdTable.scala 12:14 8:19]
    node _GEN_8 = mux(eq(UInt<4>("h8"), _io_data_T), table_8, _GEN_7) @[BcdTable.scala 15:{11,11}]
    node table_9 = UInt<8>("h9") @[BcdTable.scala 12:14 8:19]
    node _GEN_9 = mux(eq(UInt<4>("h9"), _io_data_T), table_9, _GEN_8) @[BcdTable.scala 15:{11,11}]
    node table_10 = UInt<8>("h10") @[BcdTable.scala 12:14 8:19]
    node _GEN_10 = mux(eq(UInt<4>("ha"), _io_data_T), table_10, _GEN_9) @[BcdTable.scala 15:{11,11}]
    node table_11 = UInt<8>("h11") @[BcdTable.scala 12:14 8:19]
    node _GEN_11 = mux(eq(UInt<4>("hb"), _io_data_T), table_11, _GEN_10) @[BcdTable.scala 15:{11,11}]
    node table_12 = UInt<8>("h12") @[BcdTable.scala 12:14 8:19]
    node _GEN_12 = mux(eq(UInt<4>("hc"), _io_data_T), table_12, _GEN_11) @[BcdTable.scala 15:{11,11}]
    node table_13 = UInt<8>("h13") @[BcdTable.scala 12:14 8:19]
    node _GEN_13 = mux(eq(UInt<4>("hd"), _io_data_T), table_13, _GEN_12) @[BcdTable.scala 15:{11,11}]
    node table_14 = UInt<8>("h14") @[BcdTable.scala 12:14 8:19]
    node _GEN_14 = mux(eq(UInt<4>("he"), _io_data_T), table_14, _GEN_13) @[BcdTable.scala 15:{11,11}]
    node table_15 = UInt<8>("h15") @[BcdTable.scala 12:14 8:19]
    node _GEN_15 = mux(eq(UInt<4>("hf"), _io_data_T), table_15, _GEN_14) @[BcdTable.scala 15:{11,11}]
    node table_16 = UInt<8>("h16") @[BcdTable.scala 12:14 8:19]
    node _GEN_16 = mux(eq(UInt<5>("h10"), _io_data_T), table_16, _GEN_15) @[BcdTable.scala 15:{11,11}]
    node table_17 = UInt<8>("h17") @[BcdTable.scala 12:14 8:19]
    node _GEN_17 = mux(eq(UInt<5>("h11"), _io_data_T), table_17, _GEN_16) @[BcdTable.scala 15:{11,11}]
    node table_18 = UInt<8>("h18") @[BcdTable.scala 12:14 8:19]
    node _GEN_18 = mux(eq(UInt<5>("h12"), _io_data_T), table_18, _GEN_17) @[BcdTable.scala 15:{11,11}]
    node table_19 = UInt<8>("h19") @[BcdTable.scala 12:14 8:19]
    node _GEN_19 = mux(eq(UInt<5>("h13"), _io_data_T), table_19, _GEN_18) @[BcdTable.scala 15:{11,11}]
    node table_20 = UInt<8>("h20") @[BcdTable.scala 12:14 8:19]
    node _GEN_20 = mux(eq(UInt<5>("h14"), _io_data_T), table_20, _GEN_19) @[BcdTable.scala 15:{11,11}]
    node table_21 = UInt<8>("h21") @[BcdTable.scala 12:14 8:19]
    node _GEN_21 = mux(eq(UInt<5>("h15"), _io_data_T), table_21, _GEN_20) @[BcdTable.scala 15:{11,11}]
    node table_22 = UInt<8>("h22") @[BcdTable.scala 12:14 8:19]
    node _GEN_22 = mux(eq(UInt<5>("h16"), _io_data_T), table_22, _GEN_21) @[BcdTable.scala 15:{11,11}]
    node table_23 = UInt<8>("h23") @[BcdTable.scala 12:14 8:19]
    node _GEN_23 = mux(eq(UInt<5>("h17"), _io_data_T), table_23, _GEN_22) @[BcdTable.scala 15:{11,11}]
    node table_24 = UInt<8>("h24") @[BcdTable.scala 12:14 8:19]
    node _GEN_24 = mux(eq(UInt<5>("h18"), _io_data_T), table_24, _GEN_23) @[BcdTable.scala 15:{11,11}]
    node table_25 = UInt<8>("h25") @[BcdTable.scala 12:14 8:19]
    node _GEN_25 = mux(eq(UInt<5>("h19"), _io_data_T), table_25, _GEN_24) @[BcdTable.scala 15:{11,11}]
    node table_26 = UInt<8>("h26") @[BcdTable.scala 12:14 8:19]
    node _GEN_26 = mux(eq(UInt<5>("h1a"), _io_data_T), table_26, _GEN_25) @[BcdTable.scala 15:{11,11}]
    node table_27 = UInt<8>("h27") @[BcdTable.scala 12:14 8:19]
    node _GEN_27 = mux(eq(UInt<5>("h1b"), _io_data_T), table_27, _GEN_26) @[BcdTable.scala 15:{11,11}]
    node table_28 = UInt<8>("h28") @[BcdTable.scala 12:14 8:19]
    node _GEN_28 = mux(eq(UInt<5>("h1c"), _io_data_T), table_28, _GEN_27) @[BcdTable.scala 15:{11,11}]
    node table_29 = UInt<8>("h29") @[BcdTable.scala 12:14 8:19]
    node _GEN_29 = mux(eq(UInt<5>("h1d"), _io_data_T), table_29, _GEN_28) @[BcdTable.scala 15:{11,11}]
    node table_30 = UInt<8>("h30") @[BcdTable.scala 12:14 8:19]
    node _GEN_30 = mux(eq(UInt<5>("h1e"), _io_data_T), table_30, _GEN_29) @[BcdTable.scala 15:{11,11}]
    node table_31 = UInt<8>("h31") @[BcdTable.scala 12:14 8:19]
    node _GEN_31 = mux(eq(UInt<5>("h1f"), _io_data_T), table_31, _GEN_30) @[BcdTable.scala 15:{11,11}]
    node table_32 = UInt<8>("h32") @[BcdTable.scala 12:14 8:19]
    node _GEN_32 = mux(eq(UInt<6>("h20"), _io_data_T), table_32, _GEN_31) @[BcdTable.scala 15:{11,11}]
    node table_33 = UInt<8>("h33") @[BcdTable.scala 12:14 8:19]
    node _GEN_33 = mux(eq(UInt<6>("h21"), _io_data_T), table_33, _GEN_32) @[BcdTable.scala 15:{11,11}]
    node table_34 = UInt<8>("h34") @[BcdTable.scala 12:14 8:19]
    node _GEN_34 = mux(eq(UInt<6>("h22"), _io_data_T), table_34, _GEN_33) @[BcdTable.scala 15:{11,11}]
    node table_35 = UInt<8>("h35") @[BcdTable.scala 12:14 8:19]
    node _GEN_35 = mux(eq(UInt<6>("h23"), _io_data_T), table_35, _GEN_34) @[BcdTable.scala 15:{11,11}]
    node table_36 = UInt<8>("h36") @[BcdTable.scala 12:14 8:19]
    node _GEN_36 = mux(eq(UInt<6>("h24"), _io_data_T), table_36, _GEN_35) @[BcdTable.scala 15:{11,11}]
    node table_37 = UInt<8>("h37") @[BcdTable.scala 12:14 8:19]
    node _GEN_37 = mux(eq(UInt<6>("h25"), _io_data_T), table_37, _GEN_36) @[BcdTable.scala 15:{11,11}]
    node table_38 = UInt<8>("h38") @[BcdTable.scala 12:14 8:19]
    node _GEN_38 = mux(eq(UInt<6>("h26"), _io_data_T), table_38, _GEN_37) @[BcdTable.scala 15:{11,11}]
    node table_39 = UInt<8>("h39") @[BcdTable.scala 12:14 8:19]
    node _GEN_39 = mux(eq(UInt<6>("h27"), _io_data_T), table_39, _GEN_38) @[BcdTable.scala 15:{11,11}]
    node table_40 = UInt<8>("h40") @[BcdTable.scala 12:14 8:19]
    node _GEN_40 = mux(eq(UInt<6>("h28"), _io_data_T), table_40, _GEN_39) @[BcdTable.scala 15:{11,11}]
    node table_41 = UInt<8>("h41") @[BcdTable.scala 12:14 8:19]
    node _GEN_41 = mux(eq(UInt<6>("h29"), _io_data_T), table_41, _GEN_40) @[BcdTable.scala 15:{11,11}]
    node table_42 = UInt<8>("h42") @[BcdTable.scala 12:14 8:19]
    node _GEN_42 = mux(eq(UInt<6>("h2a"), _io_data_T), table_42, _GEN_41) @[BcdTable.scala 15:{11,11}]
    node table_43 = UInt<8>("h43") @[BcdTable.scala 12:14 8:19]
    node _GEN_43 = mux(eq(UInt<6>("h2b"), _io_data_T), table_43, _GEN_42) @[BcdTable.scala 15:{11,11}]
    node table_44 = UInt<8>("h44") @[BcdTable.scala 12:14 8:19]
    node _GEN_44 = mux(eq(UInt<6>("h2c"), _io_data_T), table_44, _GEN_43) @[BcdTable.scala 15:{11,11}]
    node table_45 = UInt<8>("h45") @[BcdTable.scala 12:14 8:19]
    node _GEN_45 = mux(eq(UInt<6>("h2d"), _io_data_T), table_45, _GEN_44) @[BcdTable.scala 15:{11,11}]
    node table_46 = UInt<8>("h46") @[BcdTable.scala 12:14 8:19]
    node _GEN_46 = mux(eq(UInt<6>("h2e"), _io_data_T), table_46, _GEN_45) @[BcdTable.scala 15:{11,11}]
    node table_47 = UInt<8>("h47") @[BcdTable.scala 12:14 8:19]
    node _GEN_47 = mux(eq(UInt<6>("h2f"), _io_data_T), table_47, _GEN_46) @[BcdTable.scala 15:{11,11}]
    node table_48 = UInt<8>("h48") @[BcdTable.scala 12:14 8:19]
    node _GEN_48 = mux(eq(UInt<6>("h30"), _io_data_T), table_48, _GEN_47) @[BcdTable.scala 15:{11,11}]
    node table_49 = UInt<8>("h49") @[BcdTable.scala 12:14 8:19]
    node _GEN_49 = mux(eq(UInt<6>("h31"), _io_data_T), table_49, _GEN_48) @[BcdTable.scala 15:{11,11}]
    node table_50 = UInt<8>("h50") @[BcdTable.scala 12:14 8:19]
    node _GEN_50 = mux(eq(UInt<6>("h32"), _io_data_T), table_50, _GEN_49) @[BcdTable.scala 15:{11,11}]
    node table_51 = UInt<8>("h51") @[BcdTable.scala 12:14 8:19]
    node _GEN_51 = mux(eq(UInt<6>("h33"), _io_data_T), table_51, _GEN_50) @[BcdTable.scala 15:{11,11}]
    node table_52 = UInt<8>("h52") @[BcdTable.scala 12:14 8:19]
    node _GEN_52 = mux(eq(UInt<6>("h34"), _io_data_T), table_52, _GEN_51) @[BcdTable.scala 15:{11,11}]
    node table_53 = UInt<8>("h53") @[BcdTable.scala 12:14 8:19]
    node _GEN_53 = mux(eq(UInt<6>("h35"), _io_data_T), table_53, _GEN_52) @[BcdTable.scala 15:{11,11}]
    node table_54 = UInt<8>("h54") @[BcdTable.scala 12:14 8:19]
    node _GEN_54 = mux(eq(UInt<6>("h36"), _io_data_T), table_54, _GEN_53) @[BcdTable.scala 15:{11,11}]
    node table_55 = UInt<8>("h55") @[BcdTable.scala 12:14 8:19]
    node _GEN_55 = mux(eq(UInt<6>("h37"), _io_data_T), table_55, _GEN_54) @[BcdTable.scala 15:{11,11}]
    node table_56 = UInt<8>("h56") @[BcdTable.scala 12:14 8:19]
    node _GEN_56 = mux(eq(UInt<6>("h38"), _io_data_T), table_56, _GEN_55) @[BcdTable.scala 15:{11,11}]
    node table_57 = UInt<8>("h57") @[BcdTable.scala 12:14 8:19]
    node _GEN_57 = mux(eq(UInt<6>("h39"), _io_data_T), table_57, _GEN_56) @[BcdTable.scala 15:{11,11}]
    node table_58 = UInt<8>("h58") @[BcdTable.scala 12:14 8:19]
    node _GEN_58 = mux(eq(UInt<6>("h3a"), _io_data_T), table_58, _GEN_57) @[BcdTable.scala 15:{11,11}]
    node table_59 = UInt<8>("h59") @[BcdTable.scala 12:14 8:19]
    node _GEN_59 = mux(eq(UInt<6>("h3b"), _io_data_T), table_59, _GEN_58) @[BcdTable.scala 15:{11,11}]
    node table_60 = UInt<8>("h60") @[BcdTable.scala 12:14 8:19]
    node _GEN_60 = mux(eq(UInt<6>("h3c"), _io_data_T), table_60, _GEN_59) @[BcdTable.scala 15:{11,11}]
    node table_61 = UInt<8>("h61") @[BcdTable.scala 12:14 8:19]
    node _GEN_61 = mux(eq(UInt<6>("h3d"), _io_data_T), table_61, _GEN_60) @[BcdTable.scala 15:{11,11}]
    node table_62 = UInt<8>("h62") @[BcdTable.scala 12:14 8:19]
    node _GEN_62 = mux(eq(UInt<6>("h3e"), _io_data_T), table_62, _GEN_61) @[BcdTable.scala 15:{11,11}]
    node table_63 = UInt<8>("h63") @[BcdTable.scala 12:14 8:19]
    node _GEN_63 = mux(eq(UInt<6>("h3f"), _io_data_T), table_63, _GEN_62) @[BcdTable.scala 15:{11,11}]
    node table_64 = UInt<8>("h64") @[BcdTable.scala 12:14 8:19]
    node _GEN_64 = mux(eq(UInt<7>("h40"), _io_data_T), table_64, _GEN_63) @[BcdTable.scala 15:{11,11}]
    node table_65 = UInt<8>("h65") @[BcdTable.scala 12:14 8:19]
    node _GEN_65 = mux(eq(UInt<7>("h41"), _io_data_T), table_65, _GEN_64) @[BcdTable.scala 15:{11,11}]
    node table_66 = UInt<8>("h66") @[BcdTable.scala 12:14 8:19]
    node _GEN_66 = mux(eq(UInt<7>("h42"), _io_data_T), table_66, _GEN_65) @[BcdTable.scala 15:{11,11}]
    node table_67 = UInt<8>("h67") @[BcdTable.scala 12:14 8:19]
    node _GEN_67 = mux(eq(UInt<7>("h43"), _io_data_T), table_67, _GEN_66) @[BcdTable.scala 15:{11,11}]
    node table_68 = UInt<8>("h68") @[BcdTable.scala 12:14 8:19]
    node _GEN_68 = mux(eq(UInt<7>("h44"), _io_data_T), table_68, _GEN_67) @[BcdTable.scala 15:{11,11}]
    node table_69 = UInt<8>("h69") @[BcdTable.scala 12:14 8:19]
    node _GEN_69 = mux(eq(UInt<7>("h45"), _io_data_T), table_69, _GEN_68) @[BcdTable.scala 15:{11,11}]
    node table_70 = UInt<8>("h70") @[BcdTable.scala 12:14 8:19]
    node _GEN_70 = mux(eq(UInt<7>("h46"), _io_data_T), table_70, _GEN_69) @[BcdTable.scala 15:{11,11}]
    node table_71 = UInt<8>("h71") @[BcdTable.scala 12:14 8:19]
    node _GEN_71 = mux(eq(UInt<7>("h47"), _io_data_T), table_71, _GEN_70) @[BcdTable.scala 15:{11,11}]
    node table_72 = UInt<8>("h72") @[BcdTable.scala 12:14 8:19]
    node _GEN_72 = mux(eq(UInt<7>("h48"), _io_data_T), table_72, _GEN_71) @[BcdTable.scala 15:{11,11}]
    node table_73 = UInt<8>("h73") @[BcdTable.scala 12:14 8:19]
    node _GEN_73 = mux(eq(UInt<7>("h49"), _io_data_T), table_73, _GEN_72) @[BcdTable.scala 15:{11,11}]
    node table_74 = UInt<8>("h74") @[BcdTable.scala 12:14 8:19]
    node _GEN_74 = mux(eq(UInt<7>("h4a"), _io_data_T), table_74, _GEN_73) @[BcdTable.scala 15:{11,11}]
    node table_75 = UInt<8>("h75") @[BcdTable.scala 12:14 8:19]
    node _GEN_75 = mux(eq(UInt<7>("h4b"), _io_data_T), table_75, _GEN_74) @[BcdTable.scala 15:{11,11}]
    node table_76 = UInt<8>("h76") @[BcdTable.scala 12:14 8:19]
    node _GEN_76 = mux(eq(UInt<7>("h4c"), _io_data_T), table_76, _GEN_75) @[BcdTable.scala 15:{11,11}]
    node table_77 = UInt<8>("h77") @[BcdTable.scala 12:14 8:19]
    node _GEN_77 = mux(eq(UInt<7>("h4d"), _io_data_T), table_77, _GEN_76) @[BcdTable.scala 15:{11,11}]
    node table_78 = UInt<8>("h78") @[BcdTable.scala 12:14 8:19]
    node _GEN_78 = mux(eq(UInt<7>("h4e"), _io_data_T), table_78, _GEN_77) @[BcdTable.scala 15:{11,11}]
    node table_79 = UInt<8>("h79") @[BcdTable.scala 12:14 8:19]
    node _GEN_79 = mux(eq(UInt<7>("h4f"), _io_data_T), table_79, _GEN_78) @[BcdTable.scala 15:{11,11}]
    node table_80 = UInt<8>("h80") @[BcdTable.scala 12:14 8:19]
    node _GEN_80 = mux(eq(UInt<7>("h50"), _io_data_T), table_80, _GEN_79) @[BcdTable.scala 15:{11,11}]
    node table_81 = UInt<8>("h81") @[BcdTable.scala 12:14 8:19]
    node _GEN_81 = mux(eq(UInt<7>("h51"), _io_data_T), table_81, _GEN_80) @[BcdTable.scala 15:{11,11}]
    node table_82 = UInt<8>("h82") @[BcdTable.scala 12:14 8:19]
    node _GEN_82 = mux(eq(UInt<7>("h52"), _io_data_T), table_82, _GEN_81) @[BcdTable.scala 15:{11,11}]
    node table_83 = UInt<8>("h83") @[BcdTable.scala 12:14 8:19]
    node _GEN_83 = mux(eq(UInt<7>("h53"), _io_data_T), table_83, _GEN_82) @[BcdTable.scala 15:{11,11}]
    node table_84 = UInt<8>("h84") @[BcdTable.scala 12:14 8:19]
    node _GEN_84 = mux(eq(UInt<7>("h54"), _io_data_T), table_84, _GEN_83) @[BcdTable.scala 15:{11,11}]
    node table_85 = UInt<8>("h85") @[BcdTable.scala 12:14 8:19]
    node _GEN_85 = mux(eq(UInt<7>("h55"), _io_data_T), table_85, _GEN_84) @[BcdTable.scala 15:{11,11}]
    node table_86 = UInt<8>("h86") @[BcdTable.scala 12:14 8:19]
    node _GEN_86 = mux(eq(UInt<7>("h56"), _io_data_T), table_86, _GEN_85) @[BcdTable.scala 15:{11,11}]
    node table_87 = UInt<8>("h87") @[BcdTable.scala 12:14 8:19]
    node _GEN_87 = mux(eq(UInt<7>("h57"), _io_data_T), table_87, _GEN_86) @[BcdTable.scala 15:{11,11}]
    node table_88 = UInt<8>("h88") @[BcdTable.scala 12:14 8:19]
    node _GEN_88 = mux(eq(UInt<7>("h58"), _io_data_T), table_88, _GEN_87) @[BcdTable.scala 15:{11,11}]
    node table_89 = UInt<8>("h89") @[BcdTable.scala 12:14 8:19]
    node _GEN_89 = mux(eq(UInt<7>("h59"), _io_data_T), table_89, _GEN_88) @[BcdTable.scala 15:{11,11}]
    node table_90 = UInt<8>("h90") @[BcdTable.scala 12:14 8:19]
    node _GEN_90 = mux(eq(UInt<7>("h5a"), _io_data_T), table_90, _GEN_89) @[BcdTable.scala 15:{11,11}]
    node table_91 = UInt<8>("h91") @[BcdTable.scala 12:14 8:19]
    node _GEN_91 = mux(eq(UInt<7>("h5b"), _io_data_T), table_91, _GEN_90) @[BcdTable.scala 15:{11,11}]
    node table_92 = UInt<8>("h92") @[BcdTable.scala 12:14 8:19]
    node _GEN_92 = mux(eq(UInt<7>("h5c"), _io_data_T), table_92, _GEN_91) @[BcdTable.scala 15:{11,11}]
    node table_93 = UInt<8>("h93") @[BcdTable.scala 12:14 8:19]
    node _GEN_93 = mux(eq(UInt<7>("h5d"), _io_data_T), table_93, _GEN_92) @[BcdTable.scala 15:{11,11}]
    node table_94 = UInt<8>("h94") @[BcdTable.scala 12:14 8:19]
    node _GEN_94 = mux(eq(UInt<7>("h5e"), _io_data_T), table_94, _GEN_93) @[BcdTable.scala 15:{11,11}]
    node table_95 = UInt<8>("h95") @[BcdTable.scala 12:14 8:19]
    node _GEN_95 = mux(eq(UInt<7>("h5f"), _io_data_T), table_95, _GEN_94) @[BcdTable.scala 15:{11,11}]
    node table_96 = UInt<8>("h96") @[BcdTable.scala 12:14 8:19]
    node _GEN_96 = mux(eq(UInt<7>("h60"), _io_data_T), table_96, _GEN_95) @[BcdTable.scala 15:{11,11}]
    node table_97 = UInt<8>("h97") @[BcdTable.scala 12:14 8:19]
    node _GEN_97 = mux(eq(UInt<7>("h61"), _io_data_T), table_97, _GEN_96) @[BcdTable.scala 15:{11,11}]
    node table_98 = UInt<8>("h98") @[BcdTable.scala 12:14 8:19]
    node _GEN_98 = mux(eq(UInt<7>("h62"), _io_data_T), table_98, _GEN_97) @[BcdTable.scala 15:{11,11}]
    node table_99 = UInt<8>("h99") @[BcdTable.scala 12:14 8:19]
    node _GEN_99 = mux(eq(UInt<7>("h63"), _io_data_T), table_99, _GEN_98) @[BcdTable.scala 15:{11,11}]
    node _table_io_data_T = _GEN_99 @[BcdTable.scala 15:11]
    io_data <= _table_io_data_T @[BcdTable.scala 15:11]

  module SevenSegNum :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<4>
    output io_out : UInt<7>

    node _T = eq(UInt<1>("h0"), io_in) @[SevenSegNum.scala 14:17]
    node _T_1 = eq(UInt<1>("h1"), io_in) @[SevenSegNum.scala 14:17]
    node _T_2 = eq(UInt<2>("h2"), io_in) @[SevenSegNum.scala 14:17]
    node _T_3 = eq(UInt<2>("h3"), io_in) @[SevenSegNum.scala 14:17]
    node _T_4 = eq(UInt<3>("h4"), io_in) @[SevenSegNum.scala 14:17]
    node _T_5 = eq(UInt<3>("h5"), io_in) @[SevenSegNum.scala 14:17]
    node _T_6 = eq(UInt<3>("h6"), io_in) @[SevenSegNum.scala 14:17]
    node _T_7 = eq(UInt<3>("h7"), io_in) @[SevenSegNum.scala 14:17]
    node _T_8 = eq(UInt<4>("h8"), io_in) @[SevenSegNum.scala 14:17]
    node _T_9 = eq(UInt<4>("h9"), io_in) @[SevenSegNum.scala 14:17]
    node _T_10 = eq(UInt<4>("ha"), io_in) @[SevenSegNum.scala 14:17]
    node _T_11 = eq(UInt<4>("hb"), io_in) @[SevenSegNum.scala 14:17]
    node _T_12 = eq(UInt<4>("hc"), io_in) @[SevenSegNum.scala 14:17]
    node _T_13 = eq(UInt<4>("hd"), io_in) @[SevenSegNum.scala 14:17]
    node _T_14 = eq(UInt<4>("he"), io_in) @[SevenSegNum.scala 14:17]
    node _T_15 = eq(UInt<4>("hf"), io_in) @[SevenSegNum.scala 14:17]
    node _GEN_0 = mux(_T_15, UInt<7>("h7f"), UInt<1>("h0")) @[SevenSegNum.scala 14:17 31:24 10:27]
    node _GEN_1 = mux(_T_14, UInt<7>("h79"), _GEN_0) @[SevenSegNum.scala 14:17 29:24]
    node _GEN_2 = mux(_T_13, UInt<7>("h5e"), _GEN_1) @[SevenSegNum.scala 14:17 28:24]
    node _GEN_3 = mux(_T_12, UInt<7>("h58"), _GEN_2) @[SevenSegNum.scala 14:17 27:24]
    node _GEN_4 = mux(_T_11, UInt<7>("h7c"), _GEN_3) @[SevenSegNum.scala 14:17 26:24]
    node _GEN_5 = mux(_T_10, UInt<7>("h77"), _GEN_4) @[SevenSegNum.scala 14:17 25:24]
    node _GEN_6 = mux(_T_9, UInt<7>("h6f"), _GEN_5) @[SevenSegNum.scala 14:17 24:24]
    node _GEN_7 = mux(_T_8, UInt<7>("h7f"), _GEN_6) @[SevenSegNum.scala 14:17 23:24]
    node _GEN_8 = mux(_T_7, UInt<3>("h7"), _GEN_7) @[SevenSegNum.scala 14:17 22:24]
    node _GEN_9 = mux(_T_6, UInt<7>("h7d"), _GEN_8) @[SevenSegNum.scala 14:17 21:24]
    node _GEN_10 = mux(_T_5, UInt<7>("h6d"), _GEN_9) @[SevenSegNum.scala 14:17 20:24]
    node _GEN_11 = mux(_T_4, UInt<7>("h66"), _GEN_10) @[SevenSegNum.scala 14:17 19:24]
    node _GEN_12 = mux(_T_3, UInt<7>("h4f"), _GEN_11) @[SevenSegNum.scala 14:17 18:24]
    node _GEN_13 = mux(_T_2, UInt<7>("h5b"), _GEN_12) @[SevenSegNum.scala 14:17 17:24]
    node _GEN_14 = mux(_T_1, UInt<3>("h6"), _GEN_13) @[SevenSegNum.scala 14:17 16:24]
    node _GEN_15 = mux(_T, UInt<6>("h3f"), _GEN_14) @[SevenSegNum.scala 14:17 15:24]
    node sevSeg = _GEN_15 @[SevenSegNum.scala 10:27]
    io_out <= sevSeg @[SevenSegNum.scala 36:10]

  module SevenSegController :
    input clock : Clock
    input reset : UInt<1>
    input io_price : UInt<8>
    input io_sum : UInt<8>
    output io_seg : UInt<7>
    output io_an : UInt<4>

    inst bcdPrice of BcdTable @[SevenSegController.scala 13:24]
    inst bcdSum of BcdTable @[SevenSegController.scala 14:22]
    inst sevSeg of SevenSegNum @[SevenSegController.scala 17:22]
    reg segSelect : UInt<2>, clock with :
      reset => (UInt<1>("h0"), segSelect) @[SevenSegController.scala 19:26]
    reg counter : UInt<17>, clock with :
      reset => (UInt<1>("h0"), counter) @[SevenSegController.scala 20:24]
    node _counter_T = add(counter, UInt<1>("h1")) @[SevenSegController.scala 22:22]
    node _counter_T_1 = tail(_counter_T, 1) @[SevenSegController.scala 22:22]
    node _T = eq(counter, UInt<5>("h14")) @[SevenSegController.scala 23:16]
    node _segSelect_T = add(segSelect, UInt<1>("h1")) @[SevenSegController.scala 25:28]
    node _segSelect_T_1 = tail(_segSelect_T, 1) @[SevenSegController.scala 25:28]
    node _GEN_0 = mux(_T, UInt<1>("h0"), _counter_T_1) @[SevenSegController.scala 22:11 23:32 24:13]
    node _GEN_1 = mux(_T, _segSelect_T_1, segSelect) @[SevenSegController.scala 23:32 25:15 19:26]
    node _T_1 = eq(UInt<1>("h0"), segSelect) @[SevenSegController.scala 29:21]
    node _T_2 = eq(UInt<1>("h1"), segSelect) @[SevenSegController.scala 29:21]
    node _T_3 = eq(UInt<2>("h2"), segSelect) @[SevenSegController.scala 29:21]
    node _T_4 = eq(UInt<2>("h3"), segSelect) @[SevenSegController.scala 29:21]
    node _GEN_2 = mux(_T_4, UInt<3>("h7"), UInt<4>("hf")) @[SevenSegController.scala 29:21 33:22 28:9]
    node _GEN_3 = mux(_T_3, UInt<4>("hb"), _GEN_2) @[SevenSegController.scala 29:21 32:22]
    node _GEN_4 = mux(_T_2, UInt<4>("hd"), _GEN_3) @[SevenSegController.scala 29:21 31:22]
    node _GEN_5 = mux(_T_1, UInt<4>("he"), _GEN_4) @[SevenSegController.scala 29:21 30:22]
    node _T_5 = eq(UInt<1>("h0"), segSelect) @[SevenSegController.scala 40:21]
    node _sevSeg_io_in_T = bits(bcdPrice.io_data, 3, 0) @[SevenSegController.scala 41:48]
    node _T_6 = eq(UInt<1>("h1"), segSelect) @[SevenSegController.scala 40:21]
    node _sevSeg_io_in_T_1 = bits(bcdPrice.io_data, 7, 4) @[SevenSegController.scala 42:48]
    node _T_7 = eq(UInt<2>("h2"), segSelect) @[SevenSegController.scala 40:21]
    node _sevSeg_io_in_T_2 = bits(bcdSum.io_data, 3, 0) @[SevenSegController.scala 43:46]
    node _T_8 = eq(UInt<2>("h3"), segSelect) @[SevenSegController.scala 40:21]
    node _sevSeg_io_in_T_3 = bits(bcdSum.io_data, 7, 4) @[SevenSegController.scala 44:46]
    node _GEN_6 = mux(_T_8, _sevSeg_io_in_T_3, UInt<1>("h0")) @[SevenSegController.scala 39:16 40:21 44:29]
    node _GEN_7 = mux(_T_7, _sevSeg_io_in_T_2, _GEN_6) @[SevenSegController.scala 40:21 43:29]
    node _GEN_8 = mux(_T_6, _sevSeg_io_in_T_1, _GEN_7) @[SevenSegController.scala 40:21 42:29]
    node _GEN_9 = mux(_T_5, _sevSeg_io_in_T, _GEN_8) @[SevenSegController.scala 40:21 41:29]
    node _io_seg_T = not(sevSeg.io_out) @[SevenSegController.scala 47:13]
    io_seg <= _io_seg_T @[SevenSegController.scala 47:10]
    io_an <= _GEN_5
    bcdPrice.clock <= clock
    bcdPrice.reset <= reset
    bcdPrice.io_address <= io_price @[SevenSegController.scala 36:23]
    bcdSum.clock <= clock
    bcdSum.reset <= reset
    bcdSum.io_address <= io_sum @[SevenSegController.scala 37:21]
    sevSeg.clock <= clock
    sevSeg.reset <= reset
    sevSeg.io_in <= _GEN_9
    segSelect <= mux(reset, UInt<2>("h0"), _GEN_1) @[SevenSegController.scala 19:{26,26}]
    counter <= mux(reset, UInt<17>("h0"), _GEN_0) @[SevenSegController.scala 20:{24,24}]

  module TxtLookup :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<5>
    output io_out : UInt<7>

    node _T = eq(UInt<1>("h0"), io_in) @[TxtLookup.scala 12:17]
    node _T_1 = eq(UInt<1>("h1"), io_in) @[TxtLookup.scala 12:17]
    node _T_2 = eq(UInt<2>("h2"), io_in) @[TxtLookup.scala 12:17]
    node _T_3 = eq(UInt<2>("h3"), io_in) @[TxtLookup.scala 12:17]
    node _T_4 = eq(UInt<3>("h4"), io_in) @[TxtLookup.scala 12:17]
    node _T_5 = eq(UInt<3>("h5"), io_in) @[TxtLookup.scala 12:17]
    node _T_6 = eq(UInt<3>("h6"), io_in) @[TxtLookup.scala 12:17]
    node _T_7 = eq(UInt<3>("h7"), io_in) @[TxtLookup.scala 12:17]
    node _T_8 = eq(UInt<4>("h8"), io_in) @[TxtLookup.scala 12:17]
    node _T_9 = eq(UInt<4>("h9"), io_in) @[TxtLookup.scala 12:17]
    node _T_10 = eq(UInt<4>("ha"), io_in) @[TxtLookup.scala 12:17]
    node _T_11 = eq(UInt<4>("hb"), io_in) @[TxtLookup.scala 12:17]
    node _T_12 = eq(UInt<4>("hc"), io_in) @[TxtLookup.scala 12:17]
    node _T_13 = eq(UInt<4>("hd"), io_in) @[TxtLookup.scala 12:17]
    node _T_14 = eq(UInt<4>("he"), io_in) @[TxtLookup.scala 12:17]
    node _T_15 = eq(UInt<4>("hf"), io_in) @[TxtLookup.scala 12:17]
    node _T_16 = eq(UInt<5>("h10"), io_in) @[TxtLookup.scala 12:17]
    node _T_17 = eq(UInt<5>("h11"), io_in) @[TxtLookup.scala 12:17]
    node _T_18 = eq(UInt<5>("h12"), io_in) @[TxtLookup.scala 12:17]
    node _T_19 = eq(UInt<5>("h13"), io_in) @[TxtLookup.scala 12:17]
    node _T_20 = eq(UInt<5>("h14"), io_in) @[TxtLookup.scala 12:17]
    node _T_21 = eq(UInt<5>("h15"), io_in) @[TxtLookup.scala 12:17]
    node _T_22 = eq(UInt<5>("h16"), io_in) @[TxtLookup.scala 12:17]
    node _T_23 = eq(UInt<5>("h17"), io_in) @[TxtLookup.scala 12:17]
    node _T_24 = eq(UInt<5>("h18"), io_in) @[TxtLookup.scala 12:17]
    node _T_25 = eq(UInt<5>("h19"), io_in) @[TxtLookup.scala 12:17]
    node _T_26 = eq(UInt<5>("h1a"), io_in) @[TxtLookup.scala 12:17]
    node _T_27 = eq(UInt<5>("h1b"), io_in) @[TxtLookup.scala 12:17]
    node _T_28 = eq(UInt<5>("h1c"), io_in) @[TxtLookup.scala 12:17]
    node _T_29 = eq(UInt<5>("h1d"), io_in) @[TxtLookup.scala 12:17]
    node _T_30 = eq(UInt<5>("h1e"), io_in) @[TxtLookup.scala 12:17]
    node _T_31 = eq(UInt<5>("h1f"), io_in) @[TxtLookup.scala 12:17]
    node _GEN_0 = mux(_T_31, UInt<7>("h7f"), UInt<1>("h0")) @[TxtLookup.scala 12:17 44:24 10:27]
    node _GEN_1 = mux(_T_30, UInt<7>("h7f"), _GEN_0) @[TxtLookup.scala 12:17 43:24]
    node _GEN_2 = mux(_T_29, UInt<7>("h7f"), _GEN_1) @[TxtLookup.scala 12:17 42:24]
    node _GEN_3 = mux(_T_28, UInt<7>("h7f"), _GEN_2) @[TxtLookup.scala 12:17 41:24]
    node _GEN_4 = mux(_T_27, UInt<7>("h7f"), _GEN_3) @[TxtLookup.scala 12:17 40:24]
    node _GEN_5 = mux(_T_26, UInt<7>("h7f"), _GEN_4) @[TxtLookup.scala 12:17 39:24]
    node _GEN_6 = mux(_T_25, UInt<7>("h5b"), _GEN_5) @[TxtLookup.scala 12:17 38:24]
    node _GEN_7 = mux(_T_24, UInt<7>("h6e"), _GEN_6) @[TxtLookup.scala 12:17 37:24]
    node _GEN_8 = mux(_T_23, UInt<7>("h76"), _GEN_7) @[TxtLookup.scala 12:17 36:24]
    node _GEN_9 = mux(_T_22, UInt<6>("h2a"), _GEN_8) @[TxtLookup.scala 12:17 35:24]
    node _GEN_10 = mux(_T_21, UInt<6>("h3e"), _GEN_9) @[TxtLookup.scala 12:17 34:24]
    node _GEN_11 = mux(_T_20, UInt<6>("h3e"), _GEN_10) @[TxtLookup.scala 12:17 33:24]
    node _GEN_12 = mux(_T_19, UInt<7>("h78"), _GEN_11) @[TxtLookup.scala 12:17 32:24]
    node _GEN_13 = mux(_T_18, UInt<7>("h6d"), _GEN_12) @[TxtLookup.scala 12:17 31:24]
    node _GEN_14 = mux(_T_17, UInt<6>("h31"), _GEN_13) @[TxtLookup.scala 12:17 30:24]
    node _GEN_15 = mux(_T_16, UInt<7>("h6b"), _GEN_14) @[TxtLookup.scala 12:17 29:24]
    node _GEN_16 = mux(_T_15, UInt<7>("h73"), _GEN_15) @[TxtLookup.scala 12:17 28:24]
    node _GEN_17 = mux(_T_14, UInt<7>("h5c"), _GEN_16) @[TxtLookup.scala 12:17 27:24]
    node _GEN_18 = mux(_T_13, UInt<6>("h37"), _GEN_17) @[TxtLookup.scala 12:17 26:24]
    node _GEN_19 = mux(_T_12, UInt<5>("h15"), _GEN_18) @[TxtLookup.scala 12:17 25:24]
    node _GEN_20 = mux(_T_11, UInt<6>("h38"), _GEN_19) @[TxtLookup.scala 12:17 24:24]
    node _GEN_21 = mux(_T_10, UInt<7>("h75"), _GEN_20) @[TxtLookup.scala 12:17 23:24]
    node _GEN_22 = mux(_T_9, UInt<5>("h1e"), _GEN_21) @[TxtLookup.scala 12:17 22:23]
    node _GEN_23 = mux(_T_8, UInt<6>("h30"), _GEN_22) @[TxtLookup.scala 12:17 21:23]
    node _GEN_24 = mux(_T_7, UInt<7>("h76"), _GEN_23) @[TxtLookup.scala 12:17 20:23]
    node _GEN_25 = mux(_T_6, UInt<6>("h3d"), _GEN_24) @[TxtLookup.scala 12:17 19:23]
    node _GEN_26 = mux(_T_5, UInt<7>("h71"), _GEN_25) @[TxtLookup.scala 12:17 18:23]
    node _GEN_27 = mux(_T_4, UInt<7>("h79"), _GEN_26) @[TxtLookup.scala 12:17 17:23]
    node _GEN_28 = mux(_T_3, UInt<7>("h5e"), _GEN_27) @[TxtLookup.scala 12:17 16:23]
    node _GEN_29 = mux(_T_2, UInt<6>("h39"), _GEN_28) @[TxtLookup.scala 12:17 15:23]
    node _GEN_30 = mux(_T_1, UInt<7>("h7c"), _GEN_29) @[TxtLookup.scala 12:17 14:23]
    node _GEN_31 = mux(_T, UInt<7>("h77"), _GEN_30) @[TxtLookup.scala 12:17 13:23]
    node sevSeg = _GEN_31 @[TxtLookup.scala 10:27]
    io_out <= sevSeg @[TxtLookup.scala 46:10]

  module TxtController :
    input clock : Clock
    input reset : UInt<1>
    output io_seg : UInt<7>
    output io_an : UInt<4>

    inst sevSeg of TxtLookup @[TxtController.scala 11:22]
    reg segSelect : UInt<2>, clock with :
      reset => (UInt<1>("h0"), segSelect) @[TxtController.scala 13:26]
    reg counter : UInt<17>, clock with :
      reset => (UInt<1>("h0"), counter) @[TxtController.scala 14:24]
    node _counter_T = add(counter, UInt<1>("h1")) @[TxtController.scala 16:22]
    node _counter_T_1 = tail(_counter_T, 1) @[TxtController.scala 16:22]
    node _T = eq(counter, UInt<5>("h14")) @[TxtController.scala 17:16]
    node _segSelect_T = add(segSelect, UInt<1>("h1")) @[TxtController.scala 19:28]
    node _segSelect_T_1 = tail(_segSelect_T, 1) @[TxtController.scala 19:28]
    node _GEN_0 = mux(_T, UInt<1>("h0"), _counter_T_1) @[TxtController.scala 16:11 17:34 18:13]
    node _GEN_1 = mux(_T, _segSelect_T_1, segSelect) @[TxtController.scala 17:34 19:15 13:26]
    reg txtSelect : UInt<1>, clock with :
      reset => (UInt<1>("h0"), txtSelect) @[TxtController.scala 22:26]
    reg txtCounter : UInt<32>, clock with :
      reset => (UInt<1>("h0"), txtCounter) @[TxtController.scala 23:27]
    node _txtCounter_T = add(txtCounter, UInt<1>("h1")) @[TxtController.scala 25:28]
    node _txtCounter_T_1 = tail(_txtCounter_T, 1) @[TxtController.scala 25:28]
    node _T_1 = eq(txtCounter, UInt<15>("h4e20")) @[TxtController.scala 26:19]
    node _txtSelect_T = add(txtSelect, UInt<1>("h1")) @[TxtController.scala 28:28]
    node _txtSelect_T_1 = tail(_txtSelect_T, 1) @[TxtController.scala 28:28]
    node _GEN_2 = mux(_T_1, UInt<1>("h0"), _txtCounter_T_1) @[TxtController.scala 25:14 26:42 27:16]
    node _GEN_3 = mux(_T_1, _txtSelect_T_1, txtSelect) @[TxtController.scala 26:42 28:15 22:26]
    node _T_2 = eq(txtSelect, UInt<1>("h0")) @[TxtController.scala 33:18]
    node _T_3 = eq(UInt<1>("h0"), segSelect) @[TxtController.scala 34:23]
    node _T_4 = eq(UInt<1>("h1"), segSelect) @[TxtController.scala 34:23]
    node _T_5 = eq(UInt<2>("h2"), segSelect) @[TxtController.scala 34:23]
    node _T_6 = eq(UInt<2>("h3"), segSelect) @[TxtController.scala 34:23]
    node _GEN_4 = mux(_T_6, UInt<3>("h5"), UInt<1>("h0")) @[TxtController.scala 32:16 34:23 45:22]
    node _GEN_5 = mux(_T_5, UInt<4>("he"), _GEN_4) @[TxtController.scala 34:23 42:22]
    node _GEN_6 = mux(_T_4, UInt<4>("he"), _GEN_5) @[TxtController.scala 34:23 39:22]
    node _GEN_7 = mux(_T_3, UInt<2>("h3"), _GEN_6) @[TxtController.scala 34:23 36:22]
    node _T_7 = eq(txtSelect, UInt<1>("h1")) @[TxtController.scala 48:25]
    node _T_8 = eq(UInt<1>("h0"), segSelect) @[TxtController.scala 49:23]
    node _T_9 = eq(UInt<1>("h1"), segSelect) @[TxtController.scala 49:23]
    node _T_10 = eq(UInt<2>("h2"), segSelect) @[TxtController.scala 49:23]
    node _T_11 = eq(UInt<2>("h3"), segSelect) @[TxtController.scala 49:23]
    node _GEN_8 = mux(_T_11, UInt<5>("h12"), UInt<1>("h0")) @[TxtController.scala 32:16 49:23 60:22]
    node _GEN_9 = mux(_T_10, UInt<4>("he"), _GEN_8) @[TxtController.scala 49:23 57:22]
    node _GEN_10 = mux(_T_9, UInt<2>("h3"), _GEN_9) @[TxtController.scala 49:23 54:22]
    node _GEN_11 = mux(_T_8, UInt<1>("h0"), _GEN_10) @[TxtController.scala 49:23 51:22]
    node _GEN_12 = mux(_T_7, _GEN_11, UInt<1>("h0")) @[TxtController.scala 32:16 48:34]
    node _GEN_13 = mux(_T_2, _GEN_7, _GEN_12) @[TxtController.scala 33:27]
    node _io_seg_T = not(sevSeg.io_out) @[TxtController.scala 64:13]
    node _T_12 = eq(UInt<1>("h0"), segSelect) @[TxtController.scala 68:21]
    node _T_13 = eq(UInt<1>("h1"), segSelect) @[TxtController.scala 68:21]
    node _T_14 = eq(UInt<2>("h2"), segSelect) @[TxtController.scala 68:21]
    node _T_15 = eq(UInt<2>("h3"), segSelect) @[TxtController.scala 68:21]
    node _GEN_14 = mux(_T_15, UInt<3>("h7"), UInt<4>("hf")) @[TxtController.scala 68:21 72:22 67:9]
    node _GEN_15 = mux(_T_14, UInt<4>("hb"), _GEN_14) @[TxtController.scala 68:21 71:22]
    node _GEN_16 = mux(_T_13, UInt<4>("hd"), _GEN_15) @[TxtController.scala 68:21 70:22]
    node _GEN_17 = mux(_T_12, UInt<4>("he"), _GEN_16) @[TxtController.scala 68:21 69:22]
    io_seg <= _io_seg_T @[TxtController.scala 64:10]
    io_an <= _GEN_17
    sevSeg.clock <= clock
    sevSeg.reset <= reset
    sevSeg.io_in <= _GEN_13
    segSelect <= mux(reset, UInt<2>("h0"), _GEN_1) @[TxtController.scala 13:{26,26}]
    counter <= mux(reset, UInt<17>("h0"), _GEN_0) @[TxtController.scala 14:{24,24}]
    txtSelect <= mux(reset, UInt<1>("h0"), _GEN_3) @[TxtController.scala 22:{26,26}]
    txtCounter <= mux(reset, UInt<32>("h0"), _GEN_2) @[TxtController.scala 23:{27,27}]

  module VendingMachine :
    input clock : Clock
    input reset : UInt<1>
    input io_price : UInt<5>
    input io_coin2 : UInt<1>
    input io_coin5 : UInt<1>
    input io_buy : UInt<1>
    output io_releaseCan : UInt<1>
    output io_alarm : UInt<1>
    output io_seg : UInt<7>
    output io_an : UInt<4>

    inst fsm of FSM @[VendingMachine.scala 28:19]
    inst sevSegController of SevenSegController @[VendingMachine.scala 38:32]
    inst txtController of TxtController @[VendingMachine.scala 52:29]
    reg coin2_sync : UInt<1>, clock with :
      reset => (UInt<1>("h0"), coin2_sync) @[VendingMachine.scala 17:27]
    reg coin5_sync : UInt<1>, clock with :
      reset => (UInt<1>("h0"), coin5_sync) @[VendingMachine.scala 18:27]
    reg buy_sync : UInt<1>, clock with :
      reset => (UInt<1>("h0"), buy_sync) @[VendingMachine.scala 19:25]
    reg sum : UInt<8>, clock with :
      reset => (UInt<1>("h0"), sum) @[VendingMachine.scala 25:20]
    reg init : UInt<1>, clock with :
      reset => (UInt<1>("h0"), init) @[VendingMachine.scala 44:21]
    node _T = eq(init, UInt<1>("h1")) @[VendingMachine.scala 45:14]
    node _GEN_0 = mux(_T, UInt<1>("h0"), init) @[VendingMachine.scala 45:23 46:10 44:21]
    node _GEN_1 = mux(fsm.io_idleScreen, txtController.io_an, sevSegController.io_an) @[VendingMachine.scala 53:28 54:11 58:11]
    node _GEN_2 = mux(fsm.io_idleScreen, txtController.io_seg, sevSegController.io_seg) @[VendingMachine.scala 53:28 55:12 57:12]
    reg counter : UInt<17>, clock with :
      reset => (UInt<1>("h0"), counter) @[VendingMachine.scala 61:24]
    reg alarmSelect : UInt<1>, clock with :
      reset => (UInt<1>("h0"), alarmSelect) @[VendingMachine.scala 62:28]
    node _T_1 = eq(fsm.io_alarm, UInt<1>("h1")) @[VendingMachine.scala 63:21]
    node _counter_T = add(counter, UInt<1>("h1")) @[VendingMachine.scala 64:24]
    node _counter_T_1 = tail(_counter_T, 1) @[VendingMachine.scala 64:24]
    node _T_2 = eq(counter, UInt<15>("h4e20")) @[VendingMachine.scala 65:19]
    node _alarmSelect_T = add(alarmSelect, UInt<1>("h1")) @[VendingMachine.scala 66:34]
    node _alarmSelect_T_1 = tail(_alarmSelect_T, 1) @[VendingMachine.scala 66:34]
    node _GEN_3 = mux(_T_2, _alarmSelect_T_1, alarmSelect) @[VendingMachine.scala 65:42 66:19 62:28]
    node _GEN_4 = mux(_T_2, UInt<1>("h0"), _counter_T_1) @[VendingMachine.scala 64:13 65:42 67:15]
    node _T_3 = eq(UInt<1>("h0"), alarmSelect) @[VendingMachine.scala 69:25]
    node _T_4 = eq(UInt<1>("h1"), alarmSelect) @[VendingMachine.scala 69:25]
    node _GEN_5 = mux(_T_4, sevSegController.io_seg, _GEN_2) @[VendingMachine.scala 69:25 75:16]
    node _GEN_6 = mux(_T_4, sevSegController.io_an, _GEN_1) @[VendingMachine.scala 69:25 76:15]
    node _GEN_7 = mux(_T_3, UInt<1>("h0"), _GEN_6) @[VendingMachine.scala 69:25 71:15]
    node _GEN_8 = mux(_T_3, UInt<1>("h0"), _GEN_5) @[VendingMachine.scala 69:25 72:16]
    node _GEN_9 = mux(_T_1, _GEN_4, counter) @[VendingMachine.scala 61:24 63:33]
    node _GEN_10 = mux(_T_1, _GEN_3, alarmSelect) @[VendingMachine.scala 62:28 63:33]
    node _GEN_11 = mux(_T_1, _GEN_7, _GEN_1) @[VendingMachine.scala 63:33]
    node _GEN_12 = mux(_T_1, _GEN_8, _GEN_2) @[VendingMachine.scala 63:33]
    io_releaseCan <= fsm.io_releaseCan @[VendingMachine.scala 83:17]
    io_alarm <= fsm.io_alarm @[VendingMachine.scala 84:12]
    io_seg <= _GEN_12
    io_an <= _GEN_11
    coin2_sync <= mux(reset, UInt<1>("h0"), io_coin2) @[VendingMachine.scala 17:{27,27} 20:14]
    coin5_sync <= mux(reset, UInt<1>("h0"), io_coin5) @[VendingMachine.scala 18:{27,27} 21:14]
    buy_sync <= mux(reset, UInt<1>("h0"), io_buy) @[VendingMachine.scala 19:{25,25} 22:12]
    sum <= mux(reset, UInt<8>("h0"), fsm.io_newSum) @[VendingMachine.scala 25:{20,20} 35:7]
    fsm.clock <= clock
    fsm.reset <= reset
    fsm.io_coin2 <= coin2_sync @[VendingMachine.scala 29:16]
    fsm.io_coin5 <= coin5_sync @[VendingMachine.scala 30:16]
    fsm.io_buy <= buy_sync @[VendingMachine.scala 31:14]
    fsm.io_price <= io_price @[VendingMachine.scala 33:16]
    fsm.io_sum <= sum @[VendingMachine.scala 32:14]
    sevSegController.clock <= clock
    sevSegController.reset <= reset
    sevSegController.io_price <= pad(io_price, 8) @[VendingMachine.scala 40:29]
    sevSegController.io_sum <= sum @[VendingMachine.scala 41:27]
    init <= mux(reset, UInt<1>("h1"), _GEN_0) @[VendingMachine.scala 44:{21,21}]
    txtController.clock <= clock
    txtController.reset <= reset
    counter <= mux(reset, UInt<17>("h0"), _GEN_9) @[VendingMachine.scala 61:{24,24}]
    alarmSelect <= mux(reset, UInt<1>("h0"), _GEN_10) @[VendingMachine.scala 62:{28,28}]
